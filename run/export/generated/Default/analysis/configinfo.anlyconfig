<?xml version="1.0" encoding="UTF-8"?>
<com.synopsys.vp.base:SharedConfigInfoData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:com.synopsys.vp.base="com.synopsys.vp.base.anlycfg">
<configInfo kind="MiscTrace" factoryName="Top-Down Profiler" category="Simulation Profiling"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Simulation Hotspots" category="Simulation Profiling"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Profiling Events" category="Simulation Profiling"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Processor Model Event" category="Simulation Profiling"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Memory Consumption" category="Simulation Profiling"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Register Trace" category="General"  configurable="true">
<attrInfo name="Specify ranges" kind="0" type="LIST" value="" description="Specify the begin and end offsets of a list of ranges of the memory to be traced.&#xA;These values are offsets, not addresses, so for example, an offset of 1024 means address 4096 when the memory width is 4.">
<defaultValue xsi:type="com.synopsys.vp.base:VariantListType" type="LIST">
<listItem xsi:type="com.synopsys.vp.base:VariantPairType" type="PAIR">
<first xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="0"/>
<second xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="199"/>
</listItem>
</defaultValue>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="FastTrack Info" category="FastTrack Logging"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="FastTrack Warnings" category="FastTrack Logging"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="FastTrack Errors" category="FastTrack Logging"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="FastTrack Model Internal" category="FastTrack Logging"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Power Analysis" category="Power Analysis"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Process Trace" category="General"/>
<configInfo kind="MiscTrace" factoryName="Value Trace (Clock)" category="General"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Register Trace" category="General"  configurable="true">
<attrInfo name="Specify ranges" kind="0" type="LIST" value="" description="Specify the begin and end offsets of a list of ranges of the memory to be traced.&#xA;These values are offsets, not addresses, so for example, an offset of 1024 means address 4096 when the memory width is 4.">
<defaultValue xsi:type="com.synopsys.vp.base:VariantListType" type="LIST">
<listItem xsi:type="com.synopsys.vp.base:VariantPairType" type="PAIR">
<first xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="0"/>
<second xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="18446744073709551615"/>
</listItem>
</defaultValue>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Frame" category="Deadline Traffic Analysis"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Traffic" category="Deadline Traffic Analysis"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Dataflow Analysis" category="General"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Socket Monitor" category="General"/>
<configInfo kind="MiscTrace" factoryName="Functional Coverage Port Monitor" category="General"/>
<configInfo kind="MiscTrace" factoryName="TLM Port Trace" category="General"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Transaction Field Statistics" category="General"  configurable="true">
<attrInfo name="Analyzed Field" kind="2" type="STRING" value="" description="Select the field for processing">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2FtWrTrans.begin.ace_response</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_barrier</choices>
<choices>Tlm2FtWrTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_domain</choices>
<choices>Tlm2FtWrTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_qos</choices>
<choices>Tlm2FtWrTrans.begin.axi_region</choices>
<choices>Tlm2FtWrTrans.begin.axi_response</choices>
<choices>Tlm2FtWrTrans.begin.axi_snoop</choices>
<choices>Tlm2FtWrTrans.begin.burst_size</choices>
<choices>Tlm2FtWrTrans.begin.trans_id</choices>
<choices>Tlm2FtWrTrans.begin.wrap_addr</choices>
<choices>Tlm2FtWrTrans.begin.wrap_data</choices>
<choices>Tlm2FtWrTrans.begin.m_command</choices>
<choices>Tlm2FtWrTrans.begin.m_address</choices>
<choices>Tlm2FtWrTrans.begin.m_length</choices>
<choices>Tlm2FtWrTrans.begin.m_response_status</choices>
<choices>Tlm2FtWrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtWrTrans.end.ace_response</choices>
<choices>Tlm2FtWrTrans.end.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.end.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.end.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.end.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.end.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.end.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.end.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.end.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.end.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.end.axi_access_type</choices>
<choices>Tlm2FtWrTrans.end.axi_barrier</choices>
<choices>Tlm2FtWrTrans.end.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.end.axi_domain</choices>
<choices>Tlm2FtWrTrans.end.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.end.axi_qos</choices>
<choices>Tlm2FtWrTrans.end.axi_region</choices>
<choices>Tlm2FtWrTrans.end.axi_response</choices>
<choices>Tlm2FtWrTrans.end.axi_snoop</choices>
<choices>Tlm2FtWrTrans.end.burst_size</choices>
<choices>Tlm2FtWrTrans.end.trans_id</choices>
<choices>Tlm2FtWrTrans.end.wrap_addr</choices>
<choices>Tlm2FtWrTrans.end.wrap_data</choices>
<choices>Tlm2FtWrTrans.end.m_command</choices>
<choices>Tlm2FtWrTrans.end.m_address</choices>
<choices>Tlm2FtWrTrans.end.m_length</choices>
<choices>Tlm2FtWrTrans.end.m_response_status</choices>
<choices>Tlm2FtWrTrans.end.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.end.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.begin.ace_response</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_barrier</choices>
<choices>Tlm2FtRdTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_domain</choices>
<choices>Tlm2FtRdTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_qos</choices>
<choices>Tlm2FtRdTrans.begin.axi_region</choices>
<choices>Tlm2FtRdTrans.begin.axi_response</choices>
<choices>Tlm2FtRdTrans.begin.axi_snoop</choices>
<choices>Tlm2FtRdTrans.begin.burst_size</choices>
<choices>Tlm2FtRdTrans.begin.trans_id</choices>
<choices>Tlm2FtRdTrans.begin.wrap_addr</choices>
<choices>Tlm2FtRdTrans.begin.wrap_data</choices>
<choices>Tlm2FtRdTrans.begin.m_command</choices>
<choices>Tlm2FtRdTrans.begin.m_address</choices>
<choices>Tlm2FtRdTrans.begin.m_length</choices>
<choices>Tlm2FtRdTrans.begin.m_response_status</choices>
<choices>Tlm2FtRdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.end.ace_response</choices>
<choices>Tlm2FtRdTrans.end.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.end.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.end.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.end.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.end.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.end.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.end.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.end.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.end.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.end.axi_access_type</choices>
<choices>Tlm2FtRdTrans.end.axi_barrier</choices>
<choices>Tlm2FtRdTrans.end.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.end.axi_domain</choices>
<choices>Tlm2FtRdTrans.end.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.end.axi_qos</choices>
<choices>Tlm2FtRdTrans.end.axi_region</choices>
<choices>Tlm2FtRdTrans.end.axi_response</choices>
<choices>Tlm2FtRdTrans.end.axi_snoop</choices>
<choices>Tlm2FtRdTrans.end.burst_size</choices>
<choices>Tlm2FtRdTrans.end.trans_id</choices>
<choices>Tlm2FtRdTrans.end.wrap_addr</choices>
<choices>Tlm2FtRdTrans.end.wrap_data</choices>
<choices>Tlm2FtRdTrans.end.m_command</choices>
<choices>Tlm2FtRdTrans.end.m_address</choices>
<choices>Tlm2FtRdTrans.end.m_length</choices>
<choices>Tlm2FtRdTrans.end.m_response_status</choices>
<choices>Tlm2FtRdTrans.end.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.end.m_streaming_width</choices>
<choices>WrAddr.begin.ace_response</choices>
<choices>WrAddr.begin.ace_rsp_pass_data</choices>
<choices>WrAddr.begin.ace_rsp_was_unique</choices>
<choices>WrAddr.begin.amba_bufferable</choices>
<choices>WrAddr.begin.amba_cacheable</choices>
<choices>WrAddr.begin.amba_cache_rd_alloc</choices>
<choices>WrAddr.begin.amba_cache_wr_alloc</choices>
<choices>WrAddr.begin.amba_raddr_usr_sig</choices>
<choices>WrAddr.begin.amba_rdata_usr_sig</choices>
<choices>WrAddr.begin.amba_waddr_usr_sig</choices>
<choices>WrAddr.begin.amba_wdata_usr_sig</choices>
<choices>WrAddr.begin.axi_access_mode</choices>
<choices>WrAddr.begin.axi_access_type</choices>
<choices>WrAddr.begin.axi_barrier</choices>
<choices>WrAddr.begin.axi_burst_type</choices>
<choices>WrAddr.begin.axi_domain</choices>
<choices>WrAddr.begin.axi_lock_type</choices>
<choices>WrAddr.begin.axi_protocol_state</choices>
<choices>WrAddr.begin.axi_qos</choices>
<choices>WrAddr.begin.axi_region</choices>
<choices>WrAddr.begin.axi_response</choices>
<choices>WrAddr.begin.axi_snoop</choices>
<choices>WrAddr.begin.burst_size</choices>
<choices>WrAddr.begin.trans_id</choices>
<choices>WrAddr.begin.wrap_addr</choices>
<choices>WrAddr.begin.wrap_data</choices>
<choices>WrAddr.begin.m_command</choices>
<choices>WrAddr.begin.m_address</choices>
<choices>WrAddr.begin.m_length</choices>
<choices>WrAddr.begin.m_response_status</choices>
<choices>WrAddr.begin.m_byte_enable_length</choices>
<choices>WrAddr.begin.m_streaming_width</choices>
<choices>WrAddr.end._default_field_</choices>
<choices>WrData.begin.ace_response</choices>
<choices>WrData.begin.ace_rsp_pass_data</choices>
<choices>WrData.begin.ace_rsp_was_unique</choices>
<choices>WrData.begin.amba_bufferable</choices>
<choices>WrData.begin.amba_cacheable</choices>
<choices>WrData.begin.amba_cache_rd_alloc</choices>
<choices>WrData.begin.amba_cache_wr_alloc</choices>
<choices>WrData.begin.amba_raddr_usr_sig</choices>
<choices>WrData.begin.amba_rdata_usr_sig</choices>
<choices>WrData.begin.amba_waddr_usr_sig</choices>
<choices>WrData.begin.amba_wdata_usr_sig</choices>
<choices>WrData.begin.axi_access_mode</choices>
<choices>WrData.begin.axi_access_type</choices>
<choices>WrData.begin.axi_barrier</choices>
<choices>WrData.begin.axi_burst_type</choices>
<choices>WrData.begin.axi_domain</choices>
<choices>WrData.begin.axi_lock_type</choices>
<choices>WrData.begin.axi_protocol_state</choices>
<choices>WrData.begin.axi_qos</choices>
<choices>WrData.begin.axi_region</choices>
<choices>WrData.begin.axi_response</choices>
<choices>WrData.begin.axi_snoop</choices>
<choices>WrData.begin.burst_size</choices>
<choices>WrData.begin.trans_id</choices>
<choices>WrData.begin.wrap_addr</choices>
<choices>WrData.begin.wrap_data</choices>
<choices>WrData.begin.m_command</choices>
<choices>WrData.begin.m_address</choices>
<choices>WrData.begin.m_length</choices>
<choices>WrData.begin.m_response_status</choices>
<choices>WrData.begin.m_byte_enable_length</choices>
<choices>WrData.begin.m_streaming_width</choices>
<choices>WrData.end._default_field_</choices>
<choices>WrRsp.begin.ace_response</choices>
<choices>WrRsp.begin.ace_rsp_pass_data</choices>
<choices>WrRsp.begin.ace_rsp_was_unique</choices>
<choices>WrRsp.begin.amba_bufferable</choices>
<choices>WrRsp.begin.amba_cacheable</choices>
<choices>WrRsp.begin.amba_cache_rd_alloc</choices>
<choices>WrRsp.begin.amba_cache_wr_alloc</choices>
<choices>WrRsp.begin.amba_raddr_usr_sig</choices>
<choices>WrRsp.begin.amba_rdata_usr_sig</choices>
<choices>WrRsp.begin.amba_waddr_usr_sig</choices>
<choices>WrRsp.begin.amba_wdata_usr_sig</choices>
<choices>WrRsp.begin.axi_access_mode</choices>
<choices>WrRsp.begin.axi_access_type</choices>
<choices>WrRsp.begin.axi_barrier</choices>
<choices>WrRsp.begin.axi_burst_type</choices>
<choices>WrRsp.begin.axi_domain</choices>
<choices>WrRsp.begin.axi_lock_type</choices>
<choices>WrRsp.begin.axi_protocol_state</choices>
<choices>WrRsp.begin.axi_qos</choices>
<choices>WrRsp.begin.axi_region</choices>
<choices>WrRsp.begin.axi_response</choices>
<choices>WrRsp.begin.axi_snoop</choices>
<choices>WrRsp.begin.burst_size</choices>
<choices>WrRsp.begin.trans_id</choices>
<choices>WrRsp.begin.wrap_addr</choices>
<choices>WrRsp.begin.wrap_data</choices>
<choices>WrRsp.begin.m_command</choices>
<choices>WrRsp.begin.m_address</choices>
<choices>WrRsp.begin.m_length</choices>
<choices>WrRsp.begin.m_response_status</choices>
<choices>WrRsp.begin.m_byte_enable_length</choices>
<choices>WrRsp.begin.m_streaming_width</choices>
<choices>WrRsp.end.ace_response</choices>
<choices>WrRsp.end.ace_rsp_pass_data</choices>
<choices>WrRsp.end.ace_rsp_was_unique</choices>
<choices>WrRsp.end.amba_bufferable</choices>
<choices>WrRsp.end.amba_cacheable</choices>
<choices>WrRsp.end.amba_cache_rd_alloc</choices>
<choices>WrRsp.end.amba_cache_wr_alloc</choices>
<choices>WrRsp.end.amba_raddr_usr_sig</choices>
<choices>WrRsp.end.amba_rdata_usr_sig</choices>
<choices>WrRsp.end.amba_waddr_usr_sig</choices>
<choices>WrRsp.end.amba_wdata_usr_sig</choices>
<choices>WrRsp.end.axi_access_mode</choices>
<choices>WrRsp.end.axi_access_type</choices>
<choices>WrRsp.end.axi_barrier</choices>
<choices>WrRsp.end.axi_burst_type</choices>
<choices>WrRsp.end.axi_domain</choices>
<choices>WrRsp.end.axi_lock_type</choices>
<choices>WrRsp.end.axi_protocol_state</choices>
<choices>WrRsp.end.axi_qos</choices>
<choices>WrRsp.end.axi_region</choices>
<choices>WrRsp.end.axi_response</choices>
<choices>WrRsp.end.axi_snoop</choices>
<choices>WrRsp.end.burst_size</choices>
<choices>WrRsp.end.trans_id</choices>
<choices>WrRsp.end.wrap_addr</choices>
<choices>WrRsp.end.wrap_data</choices>
<choices>WrRsp.end.m_command</choices>
<choices>WrRsp.end.m_address</choices>
<choices>WrRsp.end.m_length</choices>
<choices>WrRsp.end.m_response_status</choices>
<choices>WrRsp.end.m_byte_enable_length</choices>
<choices>WrRsp.end.m_streaming_width</choices>
<choices>RdAddr.begin.ace_response</choices>
<choices>RdAddr.begin.ace_rsp_pass_data</choices>
<choices>RdAddr.begin.ace_rsp_was_unique</choices>
<choices>RdAddr.begin.amba_bufferable</choices>
<choices>RdAddr.begin.amba_cacheable</choices>
<choices>RdAddr.begin.amba_cache_rd_alloc</choices>
<choices>RdAddr.begin.amba_cache_wr_alloc</choices>
<choices>RdAddr.begin.amba_raddr_usr_sig</choices>
<choices>RdAddr.begin.amba_rdata_usr_sig</choices>
<choices>RdAddr.begin.amba_waddr_usr_sig</choices>
<choices>RdAddr.begin.amba_wdata_usr_sig</choices>
<choices>RdAddr.begin.axi_access_mode</choices>
<choices>RdAddr.begin.axi_access_type</choices>
<choices>RdAddr.begin.axi_barrier</choices>
<choices>RdAddr.begin.axi_burst_type</choices>
<choices>RdAddr.begin.axi_domain</choices>
<choices>RdAddr.begin.axi_lock_type</choices>
<choices>RdAddr.begin.axi_protocol_state</choices>
<choices>RdAddr.begin.axi_qos</choices>
<choices>RdAddr.begin.axi_region</choices>
<choices>RdAddr.begin.axi_response</choices>
<choices>RdAddr.begin.axi_snoop</choices>
<choices>RdAddr.begin.burst_size</choices>
<choices>RdAddr.begin.trans_id</choices>
<choices>RdAddr.begin.wrap_addr</choices>
<choices>RdAddr.begin.wrap_data</choices>
<choices>RdAddr.begin.m_command</choices>
<choices>RdAddr.begin.m_address</choices>
<choices>RdAddr.begin.m_length</choices>
<choices>RdAddr.begin.m_response_status</choices>
<choices>RdAddr.begin.m_byte_enable_length</choices>
<choices>RdAddr.begin.m_streaming_width</choices>
<choices>RdAddr.end._default_field_</choices>
<choices>RdData.begin.ace_response</choices>
<choices>RdData.begin.ace_rsp_pass_data</choices>
<choices>RdData.begin.ace_rsp_was_unique</choices>
<choices>RdData.begin.amba_bufferable</choices>
<choices>RdData.begin.amba_cacheable</choices>
<choices>RdData.begin.amba_cache_rd_alloc</choices>
<choices>RdData.begin.amba_cache_wr_alloc</choices>
<choices>RdData.begin.amba_raddr_usr_sig</choices>
<choices>RdData.begin.amba_rdata_usr_sig</choices>
<choices>RdData.begin.amba_waddr_usr_sig</choices>
<choices>RdData.begin.amba_wdata_usr_sig</choices>
<choices>RdData.begin.axi_access_mode</choices>
<choices>RdData.begin.axi_access_type</choices>
<choices>RdData.begin.axi_barrier</choices>
<choices>RdData.begin.axi_burst_type</choices>
<choices>RdData.begin.axi_domain</choices>
<choices>RdData.begin.axi_lock_type</choices>
<choices>RdData.begin.axi_protocol_state</choices>
<choices>RdData.begin.axi_qos</choices>
<choices>RdData.begin.axi_region</choices>
<choices>RdData.begin.axi_response</choices>
<choices>RdData.begin.axi_snoop</choices>
<choices>RdData.begin.burst_size</choices>
<choices>RdData.begin.trans_id</choices>
<choices>RdData.begin.wrap_addr</choices>
<choices>RdData.begin.wrap_data</choices>
<choices>RdData.begin.m_command</choices>
<choices>RdData.begin.m_address</choices>
<choices>RdData.begin.m_length</choices>
<choices>RdData.begin.m_response_status</choices>
<choices>RdData.begin.m_byte_enable_length</choices>
<choices>RdData.begin.m_streaming_width</choices>
<choices>RdData.end._default_field_</choices>
</attrInfo>
<attrInfo name="Condition Field" kind="2" type="STRING" value="" description="Select the field to be used as ID">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices></choices>
<choices>Tlm2FtWrTrans.begin.ace_response</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_barrier</choices>
<choices>Tlm2FtWrTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_domain</choices>
<choices>Tlm2FtWrTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_qos</choices>
<choices>Tlm2FtWrTrans.begin.axi_region</choices>
<choices>Tlm2FtWrTrans.begin.axi_response</choices>
<choices>Tlm2FtWrTrans.begin.axi_snoop</choices>
<choices>Tlm2FtWrTrans.begin.burst_size</choices>
<choices>Tlm2FtWrTrans.begin.trans_id</choices>
<choices>Tlm2FtWrTrans.begin.wrap_addr</choices>
<choices>Tlm2FtWrTrans.begin.wrap_data</choices>
<choices>Tlm2FtWrTrans.begin.m_command</choices>
<choices>Tlm2FtWrTrans.begin.m_address</choices>
<choices>Tlm2FtWrTrans.begin.m_length</choices>
<choices>Tlm2FtWrTrans.begin.m_response_status</choices>
<choices>Tlm2FtWrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtWrTrans.end.ace_response</choices>
<choices>Tlm2FtWrTrans.end.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.end.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.end.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.end.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.end.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.end.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.end.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.end.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.end.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.end.axi_access_type</choices>
<choices>Tlm2FtWrTrans.end.axi_barrier</choices>
<choices>Tlm2FtWrTrans.end.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.end.axi_domain</choices>
<choices>Tlm2FtWrTrans.end.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.end.axi_qos</choices>
<choices>Tlm2FtWrTrans.end.axi_region</choices>
<choices>Tlm2FtWrTrans.end.axi_response</choices>
<choices>Tlm2FtWrTrans.end.axi_snoop</choices>
<choices>Tlm2FtWrTrans.end.burst_size</choices>
<choices>Tlm2FtWrTrans.end.trans_id</choices>
<choices>Tlm2FtWrTrans.end.wrap_addr</choices>
<choices>Tlm2FtWrTrans.end.wrap_data</choices>
<choices>Tlm2FtWrTrans.end.m_command</choices>
<choices>Tlm2FtWrTrans.end.m_address</choices>
<choices>Tlm2FtWrTrans.end.m_length</choices>
<choices>Tlm2FtWrTrans.end.m_response_status</choices>
<choices>Tlm2FtWrTrans.end.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.end.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.begin.ace_response</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_barrier</choices>
<choices>Tlm2FtRdTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_domain</choices>
<choices>Tlm2FtRdTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_qos</choices>
<choices>Tlm2FtRdTrans.begin.axi_region</choices>
<choices>Tlm2FtRdTrans.begin.axi_response</choices>
<choices>Tlm2FtRdTrans.begin.axi_snoop</choices>
<choices>Tlm2FtRdTrans.begin.burst_size</choices>
<choices>Tlm2FtRdTrans.begin.trans_id</choices>
<choices>Tlm2FtRdTrans.begin.wrap_addr</choices>
<choices>Tlm2FtRdTrans.begin.wrap_data</choices>
<choices>Tlm2FtRdTrans.begin.m_command</choices>
<choices>Tlm2FtRdTrans.begin.m_address</choices>
<choices>Tlm2FtRdTrans.begin.m_length</choices>
<choices>Tlm2FtRdTrans.begin.m_response_status</choices>
<choices>Tlm2FtRdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.end.ace_response</choices>
<choices>Tlm2FtRdTrans.end.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.end.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.end.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.end.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.end.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.end.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.end.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.end.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.end.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.end.axi_access_type</choices>
<choices>Tlm2FtRdTrans.end.axi_barrier</choices>
<choices>Tlm2FtRdTrans.end.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.end.axi_domain</choices>
<choices>Tlm2FtRdTrans.end.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.end.axi_qos</choices>
<choices>Tlm2FtRdTrans.end.axi_region</choices>
<choices>Tlm2FtRdTrans.end.axi_response</choices>
<choices>Tlm2FtRdTrans.end.axi_snoop</choices>
<choices>Tlm2FtRdTrans.end.burst_size</choices>
<choices>Tlm2FtRdTrans.end.trans_id</choices>
<choices>Tlm2FtRdTrans.end.wrap_addr</choices>
<choices>Tlm2FtRdTrans.end.wrap_data</choices>
<choices>Tlm2FtRdTrans.end.m_command</choices>
<choices>Tlm2FtRdTrans.end.m_address</choices>
<choices>Tlm2FtRdTrans.end.m_length</choices>
<choices>Tlm2FtRdTrans.end.m_response_status</choices>
<choices>Tlm2FtRdTrans.end.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.end.m_streaming_width</choices>
<choices>WrAddr.begin.ace_response</choices>
<choices>WrAddr.begin.ace_rsp_pass_data</choices>
<choices>WrAddr.begin.ace_rsp_was_unique</choices>
<choices>WrAddr.begin.amba_bufferable</choices>
<choices>WrAddr.begin.amba_cacheable</choices>
<choices>WrAddr.begin.amba_cache_rd_alloc</choices>
<choices>WrAddr.begin.amba_cache_wr_alloc</choices>
<choices>WrAddr.begin.amba_raddr_usr_sig</choices>
<choices>WrAddr.begin.amba_rdata_usr_sig</choices>
<choices>WrAddr.begin.amba_waddr_usr_sig</choices>
<choices>WrAddr.begin.amba_wdata_usr_sig</choices>
<choices>WrAddr.begin.axi_access_mode</choices>
<choices>WrAddr.begin.axi_access_type</choices>
<choices>WrAddr.begin.axi_barrier</choices>
<choices>WrAddr.begin.axi_burst_type</choices>
<choices>WrAddr.begin.axi_domain</choices>
<choices>WrAddr.begin.axi_lock_type</choices>
<choices>WrAddr.begin.axi_protocol_state</choices>
<choices>WrAddr.begin.axi_qos</choices>
<choices>WrAddr.begin.axi_region</choices>
<choices>WrAddr.begin.axi_response</choices>
<choices>WrAddr.begin.axi_snoop</choices>
<choices>WrAddr.begin.burst_size</choices>
<choices>WrAddr.begin.trans_id</choices>
<choices>WrAddr.begin.wrap_addr</choices>
<choices>WrAddr.begin.wrap_data</choices>
<choices>WrAddr.begin.m_command</choices>
<choices>WrAddr.begin.m_address</choices>
<choices>WrAddr.begin.m_length</choices>
<choices>WrAddr.begin.m_response_status</choices>
<choices>WrAddr.begin.m_byte_enable_length</choices>
<choices>WrAddr.begin.m_streaming_width</choices>
<choices>WrAddr.end._default_field_</choices>
<choices>WrData.begin.ace_response</choices>
<choices>WrData.begin.ace_rsp_pass_data</choices>
<choices>WrData.begin.ace_rsp_was_unique</choices>
<choices>WrData.begin.amba_bufferable</choices>
<choices>WrData.begin.amba_cacheable</choices>
<choices>WrData.begin.amba_cache_rd_alloc</choices>
<choices>WrData.begin.amba_cache_wr_alloc</choices>
<choices>WrData.begin.amba_raddr_usr_sig</choices>
<choices>WrData.begin.amba_rdata_usr_sig</choices>
<choices>WrData.begin.amba_waddr_usr_sig</choices>
<choices>WrData.begin.amba_wdata_usr_sig</choices>
<choices>WrData.begin.axi_access_mode</choices>
<choices>WrData.begin.axi_access_type</choices>
<choices>WrData.begin.axi_barrier</choices>
<choices>WrData.begin.axi_burst_type</choices>
<choices>WrData.begin.axi_domain</choices>
<choices>WrData.begin.axi_lock_type</choices>
<choices>WrData.begin.axi_protocol_state</choices>
<choices>WrData.begin.axi_qos</choices>
<choices>WrData.begin.axi_region</choices>
<choices>WrData.begin.axi_response</choices>
<choices>WrData.begin.axi_snoop</choices>
<choices>WrData.begin.burst_size</choices>
<choices>WrData.begin.trans_id</choices>
<choices>WrData.begin.wrap_addr</choices>
<choices>WrData.begin.wrap_data</choices>
<choices>WrData.begin.m_command</choices>
<choices>WrData.begin.m_address</choices>
<choices>WrData.begin.m_length</choices>
<choices>WrData.begin.m_response_status</choices>
<choices>WrData.begin.m_byte_enable_length</choices>
<choices>WrData.begin.m_streaming_width</choices>
<choices>WrData.end._default_field_</choices>
<choices>WrRsp.begin.ace_response</choices>
<choices>WrRsp.begin.ace_rsp_pass_data</choices>
<choices>WrRsp.begin.ace_rsp_was_unique</choices>
<choices>WrRsp.begin.amba_bufferable</choices>
<choices>WrRsp.begin.amba_cacheable</choices>
<choices>WrRsp.begin.amba_cache_rd_alloc</choices>
<choices>WrRsp.begin.amba_cache_wr_alloc</choices>
<choices>WrRsp.begin.amba_raddr_usr_sig</choices>
<choices>WrRsp.begin.amba_rdata_usr_sig</choices>
<choices>WrRsp.begin.amba_waddr_usr_sig</choices>
<choices>WrRsp.begin.amba_wdata_usr_sig</choices>
<choices>WrRsp.begin.axi_access_mode</choices>
<choices>WrRsp.begin.axi_access_type</choices>
<choices>WrRsp.begin.axi_barrier</choices>
<choices>WrRsp.begin.axi_burst_type</choices>
<choices>WrRsp.begin.axi_domain</choices>
<choices>WrRsp.begin.axi_lock_type</choices>
<choices>WrRsp.begin.axi_protocol_state</choices>
<choices>WrRsp.begin.axi_qos</choices>
<choices>WrRsp.begin.axi_region</choices>
<choices>WrRsp.begin.axi_response</choices>
<choices>WrRsp.begin.axi_snoop</choices>
<choices>WrRsp.begin.burst_size</choices>
<choices>WrRsp.begin.trans_id</choices>
<choices>WrRsp.begin.wrap_addr</choices>
<choices>WrRsp.begin.wrap_data</choices>
<choices>WrRsp.begin.m_command</choices>
<choices>WrRsp.begin.m_address</choices>
<choices>WrRsp.begin.m_length</choices>
<choices>WrRsp.begin.m_response_status</choices>
<choices>WrRsp.begin.m_byte_enable_length</choices>
<choices>WrRsp.begin.m_streaming_width</choices>
<choices>WrRsp.end.ace_response</choices>
<choices>WrRsp.end.ace_rsp_pass_data</choices>
<choices>WrRsp.end.ace_rsp_was_unique</choices>
<choices>WrRsp.end.amba_bufferable</choices>
<choices>WrRsp.end.amba_cacheable</choices>
<choices>WrRsp.end.amba_cache_rd_alloc</choices>
<choices>WrRsp.end.amba_cache_wr_alloc</choices>
<choices>WrRsp.end.amba_raddr_usr_sig</choices>
<choices>WrRsp.end.amba_rdata_usr_sig</choices>
<choices>WrRsp.end.amba_waddr_usr_sig</choices>
<choices>WrRsp.end.amba_wdata_usr_sig</choices>
<choices>WrRsp.end.axi_access_mode</choices>
<choices>WrRsp.end.axi_access_type</choices>
<choices>WrRsp.end.axi_barrier</choices>
<choices>WrRsp.end.axi_burst_type</choices>
<choices>WrRsp.end.axi_domain</choices>
<choices>WrRsp.end.axi_lock_type</choices>
<choices>WrRsp.end.axi_protocol_state</choices>
<choices>WrRsp.end.axi_qos</choices>
<choices>WrRsp.end.axi_region</choices>
<choices>WrRsp.end.axi_response</choices>
<choices>WrRsp.end.axi_snoop</choices>
<choices>WrRsp.end.burst_size</choices>
<choices>WrRsp.end.trans_id</choices>
<choices>WrRsp.end.wrap_addr</choices>
<choices>WrRsp.end.wrap_data</choices>
<choices>WrRsp.end.m_command</choices>
<choices>WrRsp.end.m_address</choices>
<choices>WrRsp.end.m_length</choices>
<choices>WrRsp.end.m_response_status</choices>
<choices>WrRsp.end.m_byte_enable_length</choices>
<choices>WrRsp.end.m_streaming_width</choices>
<choices>RdAddr.begin.ace_response</choices>
<choices>RdAddr.begin.ace_rsp_pass_data</choices>
<choices>RdAddr.begin.ace_rsp_was_unique</choices>
<choices>RdAddr.begin.amba_bufferable</choices>
<choices>RdAddr.begin.amba_cacheable</choices>
<choices>RdAddr.begin.amba_cache_rd_alloc</choices>
<choices>RdAddr.begin.amba_cache_wr_alloc</choices>
<choices>RdAddr.begin.amba_raddr_usr_sig</choices>
<choices>RdAddr.begin.amba_rdata_usr_sig</choices>
<choices>RdAddr.begin.amba_waddr_usr_sig</choices>
<choices>RdAddr.begin.amba_wdata_usr_sig</choices>
<choices>RdAddr.begin.axi_access_mode</choices>
<choices>RdAddr.begin.axi_access_type</choices>
<choices>RdAddr.begin.axi_barrier</choices>
<choices>RdAddr.begin.axi_burst_type</choices>
<choices>RdAddr.begin.axi_domain</choices>
<choices>RdAddr.begin.axi_lock_type</choices>
<choices>RdAddr.begin.axi_protocol_state</choices>
<choices>RdAddr.begin.axi_qos</choices>
<choices>RdAddr.begin.axi_region</choices>
<choices>RdAddr.begin.axi_response</choices>
<choices>RdAddr.begin.axi_snoop</choices>
<choices>RdAddr.begin.burst_size</choices>
<choices>RdAddr.begin.trans_id</choices>
<choices>RdAddr.begin.wrap_addr</choices>
<choices>RdAddr.begin.wrap_data</choices>
<choices>RdAddr.begin.m_command</choices>
<choices>RdAddr.begin.m_address</choices>
<choices>RdAddr.begin.m_length</choices>
<choices>RdAddr.begin.m_response_status</choices>
<choices>RdAddr.begin.m_byte_enable_length</choices>
<choices>RdAddr.begin.m_streaming_width</choices>
<choices>RdAddr.end._default_field_</choices>
<choices>RdData.begin.ace_response</choices>
<choices>RdData.begin.ace_rsp_pass_data</choices>
<choices>RdData.begin.ace_rsp_was_unique</choices>
<choices>RdData.begin.amba_bufferable</choices>
<choices>RdData.begin.amba_cacheable</choices>
<choices>RdData.begin.amba_cache_rd_alloc</choices>
<choices>RdData.begin.amba_cache_wr_alloc</choices>
<choices>RdData.begin.amba_raddr_usr_sig</choices>
<choices>RdData.begin.amba_rdata_usr_sig</choices>
<choices>RdData.begin.amba_waddr_usr_sig</choices>
<choices>RdData.begin.amba_wdata_usr_sig</choices>
<choices>RdData.begin.axi_access_mode</choices>
<choices>RdData.begin.axi_access_type</choices>
<choices>RdData.begin.axi_barrier</choices>
<choices>RdData.begin.axi_burst_type</choices>
<choices>RdData.begin.axi_domain</choices>
<choices>RdData.begin.axi_lock_type</choices>
<choices>RdData.begin.axi_protocol_state</choices>
<choices>RdData.begin.axi_qos</choices>
<choices>RdData.begin.axi_region</choices>
<choices>RdData.begin.axi_response</choices>
<choices>RdData.begin.axi_snoop</choices>
<choices>RdData.begin.burst_size</choices>
<choices>RdData.begin.trans_id</choices>
<choices>RdData.begin.wrap_addr</choices>
<choices>RdData.begin.wrap_data</choices>
<choices>RdData.begin.m_command</choices>
<choices>RdData.begin.m_address</choices>
<choices>RdData.begin.m_length</choices>
<choices>RdData.begin.m_response_status</choices>
<choices>RdData.begin.m_byte_enable_length</choices>
<choices>RdData.begin.m_streaming_width</choices>
<choices>RdData.end._default_field_</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Contention Statistics" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2FtWrTrans</choices>
<choices>Tlm2FtRdTrans</choices>
<choices>WrAddr</choices>
<choices>WrData</choices>
<choices>WrRsp</choices>
<choices>RdAddr</choices>
<choices>RdData</choices>
<choices>Tlm2FtWrTrans.begin.ace_response</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_barrier</choices>
<choices>Tlm2FtWrTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_domain</choices>
<choices>Tlm2FtWrTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_qos</choices>
<choices>Tlm2FtWrTrans.begin.axi_region</choices>
<choices>Tlm2FtWrTrans.begin.axi_response</choices>
<choices>Tlm2FtWrTrans.begin.axi_snoop</choices>
<choices>Tlm2FtWrTrans.begin.burst_size</choices>
<choices>Tlm2FtWrTrans.begin.trans_id</choices>
<choices>Tlm2FtWrTrans.begin.wrap_addr</choices>
<choices>Tlm2FtWrTrans.begin.wrap_data</choices>
<choices>Tlm2FtWrTrans.begin.m_command</choices>
<choices>Tlm2FtWrTrans.begin.m_address</choices>
<choices>Tlm2FtWrTrans.begin.m_length</choices>
<choices>Tlm2FtWrTrans.begin.m_response_status</choices>
<choices>Tlm2FtWrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.begin.ace_response</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_barrier</choices>
<choices>Tlm2FtRdTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_domain</choices>
<choices>Tlm2FtRdTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_qos</choices>
<choices>Tlm2FtRdTrans.begin.axi_region</choices>
<choices>Tlm2FtRdTrans.begin.axi_response</choices>
<choices>Tlm2FtRdTrans.begin.axi_snoop</choices>
<choices>Tlm2FtRdTrans.begin.burst_size</choices>
<choices>Tlm2FtRdTrans.begin.trans_id</choices>
<choices>Tlm2FtRdTrans.begin.wrap_addr</choices>
<choices>Tlm2FtRdTrans.begin.wrap_data</choices>
<choices>Tlm2FtRdTrans.begin.m_command</choices>
<choices>Tlm2FtRdTrans.begin.m_address</choices>
<choices>Tlm2FtRdTrans.begin.m_length</choices>
<choices>Tlm2FtRdTrans.begin.m_response_status</choices>
<choices>Tlm2FtRdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.begin.m_streaming_width</choices>
<choices>WrAddr.begin.ace_response</choices>
<choices>WrAddr.begin.ace_rsp_pass_data</choices>
<choices>WrAddr.begin.ace_rsp_was_unique</choices>
<choices>WrAddr.begin.amba_bufferable</choices>
<choices>WrAddr.begin.amba_cacheable</choices>
<choices>WrAddr.begin.amba_cache_rd_alloc</choices>
<choices>WrAddr.begin.amba_cache_wr_alloc</choices>
<choices>WrAddr.begin.amba_raddr_usr_sig</choices>
<choices>WrAddr.begin.amba_rdata_usr_sig</choices>
<choices>WrAddr.begin.amba_waddr_usr_sig</choices>
<choices>WrAddr.begin.amba_wdata_usr_sig</choices>
<choices>WrAddr.begin.axi_access_mode</choices>
<choices>WrAddr.begin.axi_access_type</choices>
<choices>WrAddr.begin.axi_barrier</choices>
<choices>WrAddr.begin.axi_burst_type</choices>
<choices>WrAddr.begin.axi_domain</choices>
<choices>WrAddr.begin.axi_lock_type</choices>
<choices>WrAddr.begin.axi_protocol_state</choices>
<choices>WrAddr.begin.axi_qos</choices>
<choices>WrAddr.begin.axi_region</choices>
<choices>WrAddr.begin.axi_response</choices>
<choices>WrAddr.begin.axi_snoop</choices>
<choices>WrAddr.begin.burst_size</choices>
<choices>WrAddr.begin.trans_id</choices>
<choices>WrAddr.begin.wrap_addr</choices>
<choices>WrAddr.begin.wrap_data</choices>
<choices>WrAddr.begin.m_command</choices>
<choices>WrAddr.begin.m_address</choices>
<choices>WrAddr.begin.m_length</choices>
<choices>WrAddr.begin.m_response_status</choices>
<choices>WrAddr.begin.m_byte_enable_length</choices>
<choices>WrAddr.begin.m_streaming_width</choices>
<choices>WrData.begin.ace_response</choices>
<choices>WrData.begin.ace_rsp_pass_data</choices>
<choices>WrData.begin.ace_rsp_was_unique</choices>
<choices>WrData.begin.amba_bufferable</choices>
<choices>WrData.begin.amba_cacheable</choices>
<choices>WrData.begin.amba_cache_rd_alloc</choices>
<choices>WrData.begin.amba_cache_wr_alloc</choices>
<choices>WrData.begin.amba_raddr_usr_sig</choices>
<choices>WrData.begin.amba_rdata_usr_sig</choices>
<choices>WrData.begin.amba_waddr_usr_sig</choices>
<choices>WrData.begin.amba_wdata_usr_sig</choices>
<choices>WrData.begin.axi_access_mode</choices>
<choices>WrData.begin.axi_access_type</choices>
<choices>WrData.begin.axi_barrier</choices>
<choices>WrData.begin.axi_burst_type</choices>
<choices>WrData.begin.axi_domain</choices>
<choices>WrData.begin.axi_lock_type</choices>
<choices>WrData.begin.axi_protocol_state</choices>
<choices>WrData.begin.axi_qos</choices>
<choices>WrData.begin.axi_region</choices>
<choices>WrData.begin.axi_response</choices>
<choices>WrData.begin.axi_snoop</choices>
<choices>WrData.begin.burst_size</choices>
<choices>WrData.begin.trans_id</choices>
<choices>WrData.begin.wrap_addr</choices>
<choices>WrData.begin.wrap_data</choices>
<choices>WrData.begin.m_command</choices>
<choices>WrData.begin.m_address</choices>
<choices>WrData.begin.m_length</choices>
<choices>WrData.begin.m_response_status</choices>
<choices>WrData.begin.m_byte_enable_length</choices>
<choices>WrData.begin.m_streaming_width</choices>
<choices>WrRsp.begin.ace_response</choices>
<choices>WrRsp.begin.ace_rsp_pass_data</choices>
<choices>WrRsp.begin.ace_rsp_was_unique</choices>
<choices>WrRsp.begin.amba_bufferable</choices>
<choices>WrRsp.begin.amba_cacheable</choices>
<choices>WrRsp.begin.amba_cache_rd_alloc</choices>
<choices>WrRsp.begin.amba_cache_wr_alloc</choices>
<choices>WrRsp.begin.amba_raddr_usr_sig</choices>
<choices>WrRsp.begin.amba_rdata_usr_sig</choices>
<choices>WrRsp.begin.amba_waddr_usr_sig</choices>
<choices>WrRsp.begin.amba_wdata_usr_sig</choices>
<choices>WrRsp.begin.axi_access_mode</choices>
<choices>WrRsp.begin.axi_access_type</choices>
<choices>WrRsp.begin.axi_barrier</choices>
<choices>WrRsp.begin.axi_burst_type</choices>
<choices>WrRsp.begin.axi_domain</choices>
<choices>WrRsp.begin.axi_lock_type</choices>
<choices>WrRsp.begin.axi_protocol_state</choices>
<choices>WrRsp.begin.axi_qos</choices>
<choices>WrRsp.begin.axi_region</choices>
<choices>WrRsp.begin.axi_response</choices>
<choices>WrRsp.begin.axi_snoop</choices>
<choices>WrRsp.begin.burst_size</choices>
<choices>WrRsp.begin.trans_id</choices>
<choices>WrRsp.begin.wrap_addr</choices>
<choices>WrRsp.begin.wrap_data</choices>
<choices>WrRsp.begin.m_command</choices>
<choices>WrRsp.begin.m_address</choices>
<choices>WrRsp.begin.m_length</choices>
<choices>WrRsp.begin.m_response_status</choices>
<choices>WrRsp.begin.m_byte_enable_length</choices>
<choices>WrRsp.begin.m_streaming_width</choices>
<choices>RdAddr.begin.ace_response</choices>
<choices>RdAddr.begin.ace_rsp_pass_data</choices>
<choices>RdAddr.begin.ace_rsp_was_unique</choices>
<choices>RdAddr.begin.amba_bufferable</choices>
<choices>RdAddr.begin.amba_cacheable</choices>
<choices>RdAddr.begin.amba_cache_rd_alloc</choices>
<choices>RdAddr.begin.amba_cache_wr_alloc</choices>
<choices>RdAddr.begin.amba_raddr_usr_sig</choices>
<choices>RdAddr.begin.amba_rdata_usr_sig</choices>
<choices>RdAddr.begin.amba_waddr_usr_sig</choices>
<choices>RdAddr.begin.amba_wdata_usr_sig</choices>
<choices>RdAddr.begin.axi_access_mode</choices>
<choices>RdAddr.begin.axi_access_type</choices>
<choices>RdAddr.begin.axi_barrier</choices>
<choices>RdAddr.begin.axi_burst_type</choices>
<choices>RdAddr.begin.axi_domain</choices>
<choices>RdAddr.begin.axi_lock_type</choices>
<choices>RdAddr.begin.axi_protocol_state</choices>
<choices>RdAddr.begin.axi_qos</choices>
<choices>RdAddr.begin.axi_region</choices>
<choices>RdAddr.begin.axi_response</choices>
<choices>RdAddr.begin.axi_snoop</choices>
<choices>RdAddr.begin.burst_size</choices>
<choices>RdAddr.begin.trans_id</choices>
<choices>RdAddr.begin.wrap_addr</choices>
<choices>RdAddr.begin.wrap_data</choices>
<choices>RdAddr.begin.m_command</choices>
<choices>RdAddr.begin.m_address</choices>
<choices>RdAddr.begin.m_length</choices>
<choices>RdAddr.begin.m_response_status</choices>
<choices>RdAddr.begin.m_byte_enable_length</choices>
<choices>RdAddr.begin.m_streaming_width</choices>
<choices>RdData.begin.ace_response</choices>
<choices>RdData.begin.ace_rsp_pass_data</choices>
<choices>RdData.begin.ace_rsp_was_unique</choices>
<choices>RdData.begin.amba_bufferable</choices>
<choices>RdData.begin.amba_cacheable</choices>
<choices>RdData.begin.amba_cache_rd_alloc</choices>
<choices>RdData.begin.amba_cache_wr_alloc</choices>
<choices>RdData.begin.amba_raddr_usr_sig</choices>
<choices>RdData.begin.amba_rdata_usr_sig</choices>
<choices>RdData.begin.amba_waddr_usr_sig</choices>
<choices>RdData.begin.amba_wdata_usr_sig</choices>
<choices>RdData.begin.axi_access_mode</choices>
<choices>RdData.begin.axi_access_type</choices>
<choices>RdData.begin.axi_barrier</choices>
<choices>RdData.begin.axi_burst_type</choices>
<choices>RdData.begin.axi_domain</choices>
<choices>RdData.begin.axi_lock_type</choices>
<choices>RdData.begin.axi_protocol_state</choices>
<choices>RdData.begin.axi_qos</choices>
<choices>RdData.begin.axi_region</choices>
<choices>RdData.begin.axi_response</choices>
<choices>RdData.begin.axi_snoop</choices>
<choices>RdData.begin.burst_size</choices>
<choices>RdData.begin.trans_id</choices>
<choices>RdData.begin.wrap_addr</choices>
<choices>RdData.begin.wrap_data</choices>
<choices>RdData.begin.m_command</choices>
<choices>RdData.begin.m_address</choices>
<choices>RdData.begin.m_length</choices>
<choices>RdData.begin.m_response_status</choices>
<choices>RdData.begin.m_byte_enable_length</choices>
<choices>RdData.begin.m_streaming_width</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Count" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2FtWrTrans</choices>
<choices>Tlm2FtRdTrans</choices>
<choices>WrAddr</choices>
<choices>WrData</choices>
<choices>WrRsp</choices>
<choices>RdAddr</choices>
<choices>RdData</choices>
<choices>Tlm2FtWrTrans.begin.ace_response</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_barrier</choices>
<choices>Tlm2FtWrTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_domain</choices>
<choices>Tlm2FtWrTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_qos</choices>
<choices>Tlm2FtWrTrans.begin.axi_region</choices>
<choices>Tlm2FtWrTrans.begin.axi_response</choices>
<choices>Tlm2FtWrTrans.begin.axi_snoop</choices>
<choices>Tlm2FtWrTrans.begin.burst_size</choices>
<choices>Tlm2FtWrTrans.begin.trans_id</choices>
<choices>Tlm2FtWrTrans.begin.wrap_addr</choices>
<choices>Tlm2FtWrTrans.begin.wrap_data</choices>
<choices>Tlm2FtWrTrans.begin.m_command</choices>
<choices>Tlm2FtWrTrans.begin.m_address</choices>
<choices>Tlm2FtWrTrans.begin.m_length</choices>
<choices>Tlm2FtWrTrans.begin.m_response_status</choices>
<choices>Tlm2FtWrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.begin.ace_response</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_barrier</choices>
<choices>Tlm2FtRdTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_domain</choices>
<choices>Tlm2FtRdTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_qos</choices>
<choices>Tlm2FtRdTrans.begin.axi_region</choices>
<choices>Tlm2FtRdTrans.begin.axi_response</choices>
<choices>Tlm2FtRdTrans.begin.axi_snoop</choices>
<choices>Tlm2FtRdTrans.begin.burst_size</choices>
<choices>Tlm2FtRdTrans.begin.trans_id</choices>
<choices>Tlm2FtRdTrans.begin.wrap_addr</choices>
<choices>Tlm2FtRdTrans.begin.wrap_data</choices>
<choices>Tlm2FtRdTrans.begin.m_command</choices>
<choices>Tlm2FtRdTrans.begin.m_address</choices>
<choices>Tlm2FtRdTrans.begin.m_length</choices>
<choices>Tlm2FtRdTrans.begin.m_response_status</choices>
<choices>Tlm2FtRdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.begin.m_streaming_width</choices>
<choices>WrAddr.begin.ace_response</choices>
<choices>WrAddr.begin.ace_rsp_pass_data</choices>
<choices>WrAddr.begin.ace_rsp_was_unique</choices>
<choices>WrAddr.begin.amba_bufferable</choices>
<choices>WrAddr.begin.amba_cacheable</choices>
<choices>WrAddr.begin.amba_cache_rd_alloc</choices>
<choices>WrAddr.begin.amba_cache_wr_alloc</choices>
<choices>WrAddr.begin.amba_raddr_usr_sig</choices>
<choices>WrAddr.begin.amba_rdata_usr_sig</choices>
<choices>WrAddr.begin.amba_waddr_usr_sig</choices>
<choices>WrAddr.begin.amba_wdata_usr_sig</choices>
<choices>WrAddr.begin.axi_access_mode</choices>
<choices>WrAddr.begin.axi_access_type</choices>
<choices>WrAddr.begin.axi_barrier</choices>
<choices>WrAddr.begin.axi_burst_type</choices>
<choices>WrAddr.begin.axi_domain</choices>
<choices>WrAddr.begin.axi_lock_type</choices>
<choices>WrAddr.begin.axi_protocol_state</choices>
<choices>WrAddr.begin.axi_qos</choices>
<choices>WrAddr.begin.axi_region</choices>
<choices>WrAddr.begin.axi_response</choices>
<choices>WrAddr.begin.axi_snoop</choices>
<choices>WrAddr.begin.burst_size</choices>
<choices>WrAddr.begin.trans_id</choices>
<choices>WrAddr.begin.wrap_addr</choices>
<choices>WrAddr.begin.wrap_data</choices>
<choices>WrAddr.begin.m_command</choices>
<choices>WrAddr.begin.m_address</choices>
<choices>WrAddr.begin.m_length</choices>
<choices>WrAddr.begin.m_response_status</choices>
<choices>WrAddr.begin.m_byte_enable_length</choices>
<choices>WrAddr.begin.m_streaming_width</choices>
<choices>WrData.begin.ace_response</choices>
<choices>WrData.begin.ace_rsp_pass_data</choices>
<choices>WrData.begin.ace_rsp_was_unique</choices>
<choices>WrData.begin.amba_bufferable</choices>
<choices>WrData.begin.amba_cacheable</choices>
<choices>WrData.begin.amba_cache_rd_alloc</choices>
<choices>WrData.begin.amba_cache_wr_alloc</choices>
<choices>WrData.begin.amba_raddr_usr_sig</choices>
<choices>WrData.begin.amba_rdata_usr_sig</choices>
<choices>WrData.begin.amba_waddr_usr_sig</choices>
<choices>WrData.begin.amba_wdata_usr_sig</choices>
<choices>WrData.begin.axi_access_mode</choices>
<choices>WrData.begin.axi_access_type</choices>
<choices>WrData.begin.axi_barrier</choices>
<choices>WrData.begin.axi_burst_type</choices>
<choices>WrData.begin.axi_domain</choices>
<choices>WrData.begin.axi_lock_type</choices>
<choices>WrData.begin.axi_protocol_state</choices>
<choices>WrData.begin.axi_qos</choices>
<choices>WrData.begin.axi_region</choices>
<choices>WrData.begin.axi_response</choices>
<choices>WrData.begin.axi_snoop</choices>
<choices>WrData.begin.burst_size</choices>
<choices>WrData.begin.trans_id</choices>
<choices>WrData.begin.wrap_addr</choices>
<choices>WrData.begin.wrap_data</choices>
<choices>WrData.begin.m_command</choices>
<choices>WrData.begin.m_address</choices>
<choices>WrData.begin.m_length</choices>
<choices>WrData.begin.m_response_status</choices>
<choices>WrData.begin.m_byte_enable_length</choices>
<choices>WrData.begin.m_streaming_width</choices>
<choices>WrRsp.begin.ace_response</choices>
<choices>WrRsp.begin.ace_rsp_pass_data</choices>
<choices>WrRsp.begin.ace_rsp_was_unique</choices>
<choices>WrRsp.begin.amba_bufferable</choices>
<choices>WrRsp.begin.amba_cacheable</choices>
<choices>WrRsp.begin.amba_cache_rd_alloc</choices>
<choices>WrRsp.begin.amba_cache_wr_alloc</choices>
<choices>WrRsp.begin.amba_raddr_usr_sig</choices>
<choices>WrRsp.begin.amba_rdata_usr_sig</choices>
<choices>WrRsp.begin.amba_waddr_usr_sig</choices>
<choices>WrRsp.begin.amba_wdata_usr_sig</choices>
<choices>WrRsp.begin.axi_access_mode</choices>
<choices>WrRsp.begin.axi_access_type</choices>
<choices>WrRsp.begin.axi_barrier</choices>
<choices>WrRsp.begin.axi_burst_type</choices>
<choices>WrRsp.begin.axi_domain</choices>
<choices>WrRsp.begin.axi_lock_type</choices>
<choices>WrRsp.begin.axi_protocol_state</choices>
<choices>WrRsp.begin.axi_qos</choices>
<choices>WrRsp.begin.axi_region</choices>
<choices>WrRsp.begin.axi_response</choices>
<choices>WrRsp.begin.axi_snoop</choices>
<choices>WrRsp.begin.burst_size</choices>
<choices>WrRsp.begin.trans_id</choices>
<choices>WrRsp.begin.wrap_addr</choices>
<choices>WrRsp.begin.wrap_data</choices>
<choices>WrRsp.begin.m_command</choices>
<choices>WrRsp.begin.m_address</choices>
<choices>WrRsp.begin.m_length</choices>
<choices>WrRsp.begin.m_response_status</choices>
<choices>WrRsp.begin.m_byte_enable_length</choices>
<choices>WrRsp.begin.m_streaming_width</choices>
<choices>RdAddr.begin.ace_response</choices>
<choices>RdAddr.begin.ace_rsp_pass_data</choices>
<choices>RdAddr.begin.ace_rsp_was_unique</choices>
<choices>RdAddr.begin.amba_bufferable</choices>
<choices>RdAddr.begin.amba_cacheable</choices>
<choices>RdAddr.begin.amba_cache_rd_alloc</choices>
<choices>RdAddr.begin.amba_cache_wr_alloc</choices>
<choices>RdAddr.begin.amba_raddr_usr_sig</choices>
<choices>RdAddr.begin.amba_rdata_usr_sig</choices>
<choices>RdAddr.begin.amba_waddr_usr_sig</choices>
<choices>RdAddr.begin.amba_wdata_usr_sig</choices>
<choices>RdAddr.begin.axi_access_mode</choices>
<choices>RdAddr.begin.axi_access_type</choices>
<choices>RdAddr.begin.axi_barrier</choices>
<choices>RdAddr.begin.axi_burst_type</choices>
<choices>RdAddr.begin.axi_domain</choices>
<choices>RdAddr.begin.axi_lock_type</choices>
<choices>RdAddr.begin.axi_protocol_state</choices>
<choices>RdAddr.begin.axi_qos</choices>
<choices>RdAddr.begin.axi_region</choices>
<choices>RdAddr.begin.axi_response</choices>
<choices>RdAddr.begin.axi_snoop</choices>
<choices>RdAddr.begin.burst_size</choices>
<choices>RdAddr.begin.trans_id</choices>
<choices>RdAddr.begin.wrap_addr</choices>
<choices>RdAddr.begin.wrap_data</choices>
<choices>RdAddr.begin.m_command</choices>
<choices>RdAddr.begin.m_address</choices>
<choices>RdAddr.begin.m_length</choices>
<choices>RdAddr.begin.m_response_status</choices>
<choices>RdAddr.begin.m_byte_enable_length</choices>
<choices>RdAddr.begin.m_streaming_width</choices>
<choices>RdData.begin.ace_response</choices>
<choices>RdData.begin.ace_rsp_pass_data</choices>
<choices>RdData.begin.ace_rsp_was_unique</choices>
<choices>RdData.begin.amba_bufferable</choices>
<choices>RdData.begin.amba_cacheable</choices>
<choices>RdData.begin.amba_cache_rd_alloc</choices>
<choices>RdData.begin.amba_cache_wr_alloc</choices>
<choices>RdData.begin.amba_raddr_usr_sig</choices>
<choices>RdData.begin.amba_rdata_usr_sig</choices>
<choices>RdData.begin.amba_waddr_usr_sig</choices>
<choices>RdData.begin.amba_wdata_usr_sig</choices>
<choices>RdData.begin.axi_access_mode</choices>
<choices>RdData.begin.axi_access_type</choices>
<choices>RdData.begin.axi_barrier</choices>
<choices>RdData.begin.axi_burst_type</choices>
<choices>RdData.begin.axi_domain</choices>
<choices>RdData.begin.axi_lock_type</choices>
<choices>RdData.begin.axi_protocol_state</choices>
<choices>RdData.begin.axi_qos</choices>
<choices>RdData.begin.axi_region</choices>
<choices>RdData.begin.axi_response</choices>
<choices>RdData.begin.axi_snoop</choices>
<choices>RdData.begin.burst_size</choices>
<choices>RdData.begin.trans_id</choices>
<choices>RdData.begin.wrap_addr</choices>
<choices>RdData.begin.wrap_data</choices>
<choices>RdData.begin.m_command</choices>
<choices>RdData.begin.m_address</choices>
<choices>RdData.begin.m_length</choices>
<choices>RdData.begin.m_response_status</choices>
<choices>RdData.begin.m_byte_enable_length</choices>
<choices>RdData.begin.m_streaming_width</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Latency Statistics" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2FtWrTrans</choices>
<choices>Tlm2FtRdTrans</choices>
<choices>WrAddr</choices>
<choices>WrData</choices>
<choices>WrRsp</choices>
<choices>RdAddr</choices>
<choices>RdData</choices>
<choices>Tlm2FtWrTrans.begin.ace_response</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtWrTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtWrTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtWrTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtWrTrans.begin.axi_access_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_barrier</choices>
<choices>Tlm2FtWrTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_domain</choices>
<choices>Tlm2FtWrTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtWrTrans.begin.axi_qos</choices>
<choices>Tlm2FtWrTrans.begin.axi_region</choices>
<choices>Tlm2FtWrTrans.begin.axi_response</choices>
<choices>Tlm2FtWrTrans.begin.axi_snoop</choices>
<choices>Tlm2FtWrTrans.begin.burst_size</choices>
<choices>Tlm2FtWrTrans.begin.trans_id</choices>
<choices>Tlm2FtWrTrans.begin.wrap_addr</choices>
<choices>Tlm2FtWrTrans.begin.wrap_data</choices>
<choices>Tlm2FtWrTrans.begin.m_command</choices>
<choices>Tlm2FtWrTrans.begin.m_address</choices>
<choices>Tlm2FtWrTrans.begin.m_length</choices>
<choices>Tlm2FtWrTrans.begin.m_response_status</choices>
<choices>Tlm2FtWrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtWrTrans.begin.m_streaming_width</choices>
<choices>Tlm2FtRdTrans.begin.ace_response</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_pass_data</choices>
<choices>Tlm2FtRdTrans.begin.ace_rsp_was_unique</choices>
<choices>Tlm2FtRdTrans.begin.amba_bufferable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cacheable</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_rd_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_cache_wr_alloc</choices>
<choices>Tlm2FtRdTrans.begin.amba_raddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.amba_waddr_usr_sig</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_mode</choices>
<choices>Tlm2FtRdTrans.begin.axi_access_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_barrier</choices>
<choices>Tlm2FtRdTrans.begin.axi_burst_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_domain</choices>
<choices>Tlm2FtRdTrans.begin.axi_lock_type</choices>
<choices>Tlm2FtRdTrans.begin.axi_qos</choices>
<choices>Tlm2FtRdTrans.begin.axi_region</choices>
<choices>Tlm2FtRdTrans.begin.axi_response</choices>
<choices>Tlm2FtRdTrans.begin.axi_snoop</choices>
<choices>Tlm2FtRdTrans.begin.burst_size</choices>
<choices>Tlm2FtRdTrans.begin.trans_id</choices>
<choices>Tlm2FtRdTrans.begin.wrap_addr</choices>
<choices>Tlm2FtRdTrans.begin.wrap_data</choices>
<choices>Tlm2FtRdTrans.begin.m_command</choices>
<choices>Tlm2FtRdTrans.begin.m_address</choices>
<choices>Tlm2FtRdTrans.begin.m_length</choices>
<choices>Tlm2FtRdTrans.begin.m_response_status</choices>
<choices>Tlm2FtRdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2FtRdTrans.begin.m_streaming_width</choices>
<choices>WrAddr.begin.ace_response</choices>
<choices>WrAddr.begin.ace_rsp_pass_data</choices>
<choices>WrAddr.begin.ace_rsp_was_unique</choices>
<choices>WrAddr.begin.amba_bufferable</choices>
<choices>WrAddr.begin.amba_cacheable</choices>
<choices>WrAddr.begin.amba_cache_rd_alloc</choices>
<choices>WrAddr.begin.amba_cache_wr_alloc</choices>
<choices>WrAddr.begin.amba_raddr_usr_sig</choices>
<choices>WrAddr.begin.amba_rdata_usr_sig</choices>
<choices>WrAddr.begin.amba_waddr_usr_sig</choices>
<choices>WrAddr.begin.amba_wdata_usr_sig</choices>
<choices>WrAddr.begin.axi_access_mode</choices>
<choices>WrAddr.begin.axi_access_type</choices>
<choices>WrAddr.begin.axi_barrier</choices>
<choices>WrAddr.begin.axi_burst_type</choices>
<choices>WrAddr.begin.axi_domain</choices>
<choices>WrAddr.begin.axi_lock_type</choices>
<choices>WrAddr.begin.axi_protocol_state</choices>
<choices>WrAddr.begin.axi_qos</choices>
<choices>WrAddr.begin.axi_region</choices>
<choices>WrAddr.begin.axi_response</choices>
<choices>WrAddr.begin.axi_snoop</choices>
<choices>WrAddr.begin.burst_size</choices>
<choices>WrAddr.begin.trans_id</choices>
<choices>WrAddr.begin.wrap_addr</choices>
<choices>WrAddr.begin.wrap_data</choices>
<choices>WrAddr.begin.m_command</choices>
<choices>WrAddr.begin.m_address</choices>
<choices>WrAddr.begin.m_length</choices>
<choices>WrAddr.begin.m_response_status</choices>
<choices>WrAddr.begin.m_byte_enable_length</choices>
<choices>WrAddr.begin.m_streaming_width</choices>
<choices>WrData.begin.ace_response</choices>
<choices>WrData.begin.ace_rsp_pass_data</choices>
<choices>WrData.begin.ace_rsp_was_unique</choices>
<choices>WrData.begin.amba_bufferable</choices>
<choices>WrData.begin.amba_cacheable</choices>
<choices>WrData.begin.amba_cache_rd_alloc</choices>
<choices>WrData.begin.amba_cache_wr_alloc</choices>
<choices>WrData.begin.amba_raddr_usr_sig</choices>
<choices>WrData.begin.amba_rdata_usr_sig</choices>
<choices>WrData.begin.amba_waddr_usr_sig</choices>
<choices>WrData.begin.amba_wdata_usr_sig</choices>
<choices>WrData.begin.axi_access_mode</choices>
<choices>WrData.begin.axi_access_type</choices>
<choices>WrData.begin.axi_barrier</choices>
<choices>WrData.begin.axi_burst_type</choices>
<choices>WrData.begin.axi_domain</choices>
<choices>WrData.begin.axi_lock_type</choices>
<choices>WrData.begin.axi_protocol_state</choices>
<choices>WrData.begin.axi_qos</choices>
<choices>WrData.begin.axi_region</choices>
<choices>WrData.begin.axi_response</choices>
<choices>WrData.begin.axi_snoop</choices>
<choices>WrData.begin.burst_size</choices>
<choices>WrData.begin.trans_id</choices>
<choices>WrData.begin.wrap_addr</choices>
<choices>WrData.begin.wrap_data</choices>
<choices>WrData.begin.m_command</choices>
<choices>WrData.begin.m_address</choices>
<choices>WrData.begin.m_length</choices>
<choices>WrData.begin.m_response_status</choices>
<choices>WrData.begin.m_byte_enable_length</choices>
<choices>WrData.begin.m_streaming_width</choices>
<choices>WrRsp.begin.ace_response</choices>
<choices>WrRsp.begin.ace_rsp_pass_data</choices>
<choices>WrRsp.begin.ace_rsp_was_unique</choices>
<choices>WrRsp.begin.amba_bufferable</choices>
<choices>WrRsp.begin.amba_cacheable</choices>
<choices>WrRsp.begin.amba_cache_rd_alloc</choices>
<choices>WrRsp.begin.amba_cache_wr_alloc</choices>
<choices>WrRsp.begin.amba_raddr_usr_sig</choices>
<choices>WrRsp.begin.amba_rdata_usr_sig</choices>
<choices>WrRsp.begin.amba_waddr_usr_sig</choices>
<choices>WrRsp.begin.amba_wdata_usr_sig</choices>
<choices>WrRsp.begin.axi_access_mode</choices>
<choices>WrRsp.begin.axi_access_type</choices>
<choices>WrRsp.begin.axi_barrier</choices>
<choices>WrRsp.begin.axi_burst_type</choices>
<choices>WrRsp.begin.axi_domain</choices>
<choices>WrRsp.begin.axi_lock_type</choices>
<choices>WrRsp.begin.axi_protocol_state</choices>
<choices>WrRsp.begin.axi_qos</choices>
<choices>WrRsp.begin.axi_region</choices>
<choices>WrRsp.begin.axi_response</choices>
<choices>WrRsp.begin.axi_snoop</choices>
<choices>WrRsp.begin.burst_size</choices>
<choices>WrRsp.begin.trans_id</choices>
<choices>WrRsp.begin.wrap_addr</choices>
<choices>WrRsp.begin.wrap_data</choices>
<choices>WrRsp.begin.m_command</choices>
<choices>WrRsp.begin.m_address</choices>
<choices>WrRsp.begin.m_length</choices>
<choices>WrRsp.begin.m_response_status</choices>
<choices>WrRsp.begin.m_byte_enable_length</choices>
<choices>WrRsp.begin.m_streaming_width</choices>
<choices>RdAddr.begin.ace_response</choices>
<choices>RdAddr.begin.ace_rsp_pass_data</choices>
<choices>RdAddr.begin.ace_rsp_was_unique</choices>
<choices>RdAddr.begin.amba_bufferable</choices>
<choices>RdAddr.begin.amba_cacheable</choices>
<choices>RdAddr.begin.amba_cache_rd_alloc</choices>
<choices>RdAddr.begin.amba_cache_wr_alloc</choices>
<choices>RdAddr.begin.amba_raddr_usr_sig</choices>
<choices>RdAddr.begin.amba_rdata_usr_sig</choices>
<choices>RdAddr.begin.amba_waddr_usr_sig</choices>
<choices>RdAddr.begin.amba_wdata_usr_sig</choices>
<choices>RdAddr.begin.axi_access_mode</choices>
<choices>RdAddr.begin.axi_access_type</choices>
<choices>RdAddr.begin.axi_barrier</choices>
<choices>RdAddr.begin.axi_burst_type</choices>
<choices>RdAddr.begin.axi_domain</choices>
<choices>RdAddr.begin.axi_lock_type</choices>
<choices>RdAddr.begin.axi_protocol_state</choices>
<choices>RdAddr.begin.axi_qos</choices>
<choices>RdAddr.begin.axi_region</choices>
<choices>RdAddr.begin.axi_response</choices>
<choices>RdAddr.begin.axi_snoop</choices>
<choices>RdAddr.begin.burst_size</choices>
<choices>RdAddr.begin.trans_id</choices>
<choices>RdAddr.begin.wrap_addr</choices>
<choices>RdAddr.begin.wrap_data</choices>
<choices>RdAddr.begin.m_command</choices>
<choices>RdAddr.begin.m_address</choices>
<choices>RdAddr.begin.m_length</choices>
<choices>RdAddr.begin.m_response_status</choices>
<choices>RdAddr.begin.m_byte_enable_length</choices>
<choices>RdAddr.begin.m_streaming_width</choices>
<choices>RdData.begin.ace_response</choices>
<choices>RdData.begin.ace_rsp_pass_data</choices>
<choices>RdData.begin.ace_rsp_was_unique</choices>
<choices>RdData.begin.amba_bufferable</choices>
<choices>RdData.begin.amba_cacheable</choices>
<choices>RdData.begin.amba_cache_rd_alloc</choices>
<choices>RdData.begin.amba_cache_wr_alloc</choices>
<choices>RdData.begin.amba_raddr_usr_sig</choices>
<choices>RdData.begin.amba_rdata_usr_sig</choices>
<choices>RdData.begin.amba_waddr_usr_sig</choices>
<choices>RdData.begin.amba_wdata_usr_sig</choices>
<choices>RdData.begin.axi_access_mode</choices>
<choices>RdData.begin.axi_access_type</choices>
<choices>RdData.begin.axi_barrier</choices>
<choices>RdData.begin.axi_burst_type</choices>
<choices>RdData.begin.axi_domain</choices>
<choices>RdData.begin.axi_lock_type</choices>
<choices>RdData.begin.axi_protocol_state</choices>
<choices>RdData.begin.axi_qos</choices>
<choices>RdData.begin.axi_region</choices>
<choices>RdData.begin.axi_response</choices>
<choices>RdData.begin.axi_snoop</choices>
<choices>RdData.begin.burst_size</choices>
<choices>RdData.begin.trans_id</choices>
<choices>RdData.begin.wrap_addr</choices>
<choices>RdData.begin.wrap_data</choices>
<choices>RdData.begin.m_command</choices>
<choices>RdData.begin.m_address</choices>
<choices>RdData.begin.m_length</choices>
<choices>RdData.begin.m_response_status</choices>
<choices>RdData.begin.m_byte_enable_length</choices>
<choices>RdData.begin.m_streaming_width</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Protocol Checker" category="General"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="MCO Resource" category="MCO"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="MCO Residency" category="MCO"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="MCO Resource Load" category="MCO"  configurable="true"/>
<configInfo kind="BusAnalysis" factoryName="BusDebug" category="Bus Analysis"/>
<configInfo kind="BusAnalysis" factoryName="BusAnalysis" category="Bus Analysis"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="ClockParameter" category="General"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="Transaction Field Statistics" category="General"  configurable="true">
<attrInfo name="Analyzed Field" kind="2" type="STRING" value="" description="Select the field for processing">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2RdTrans.begin.m_command</choices>
<choices>Tlm2RdTrans.begin.m_address</choices>
<choices>Tlm2RdTrans.begin.m_length</choices>
<choices>Tlm2RdTrans.begin.m_response_status</choices>
<choices>Tlm2RdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.begin.m_streaming_width</choices>
<choices>Tlm2RdTrans.end.m_command</choices>
<choices>Tlm2RdTrans.end.m_address</choices>
<choices>Tlm2RdTrans.end.m_length</choices>
<choices>Tlm2RdTrans.end.m_response_status</choices>
<choices>Tlm2RdTrans.end.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.end.m_streaming_width</choices>
<choices>Tlm2WrTrans.begin.m_command</choices>
<choices>Tlm2WrTrans.begin.m_address</choices>
<choices>Tlm2WrTrans.begin.m_length</choices>
<choices>Tlm2WrTrans.begin.m_response_status</choices>
<choices>Tlm2WrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.begin.m_streaming_width</choices>
<choices>Tlm2WrTrans.end.m_command</choices>
<choices>Tlm2WrTrans.end.m_address</choices>
<choices>Tlm2WrTrans.end.m_length</choices>
<choices>Tlm2WrTrans.end.m_response_status</choices>
<choices>Tlm2WrTrans.end.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.end.m_streaming_width</choices>
<choices>DMI Read Access Request.begin.m_command</choices>
<choices>DMI Read Access Request.begin.m_address</choices>
<choices>DMI Read Access Request.begin.m_length</choices>
<choices>DMI Read Access Request.begin.m_response_status</choices>
<choices>DMI Read Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Read Access Request.begin.m_streaming_width</choices>
<choices>DMI Read Access Request.end.m_dmi_start_address</choices>
<choices>DMI Read Access Request.end.m_dmi_end_address</choices>
<choices>DMI Read Access Request.end.m_dmi_access</choices>
<choices>DMI Write Access Request.begin.m_command</choices>
<choices>DMI Write Access Request.begin.m_address</choices>
<choices>DMI Write Access Request.begin.m_length</choices>
<choices>DMI Write Access Request.begin.m_response_status</choices>
<choices>DMI Write Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Write Access Request.begin.m_streaming_width</choices>
<choices>DMI Write Access Request.end.m_dmi_start_address</choices>
<choices>DMI Write Access Request.end.m_dmi_end_address</choices>
<choices>DMI Write Access Request.end.m_dmi_access</choices>
<choices>DMI Invalidation.begin</choices>
<choices>DMI Invalidation.end</choices>
<choices>Request phase.begin.m_command</choices>
<choices>Request phase.begin.m_address</choices>
<choices>Request phase.begin.m_length</choices>
<choices>Request phase.begin.m_response_status</choices>
<choices>Request phase.begin.m_byte_enable_length</choices>
<choices>Request phase.begin.m_streaming_width</choices>
<choices>Request phase.end._default_field_</choices>
<choices>Response phase.begin._default_field_</choices>
<choices>Response phase.end.m_command</choices>
<choices>Response phase.end.m_address</choices>
<choices>Response phase.end.m_length</choices>
<choices>Response phase.end.m_response_status</choices>
<choices>Response phase.end.m_byte_enable_length</choices>
<choices>Response phase.end.m_streaming_width</choices>
</attrInfo>
<attrInfo name="Condition Field" kind="2" type="STRING" value="" description="Select the field to be used as ID">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices></choices>
<choices>Tlm2RdTrans.begin.m_command</choices>
<choices>Tlm2RdTrans.begin.m_address</choices>
<choices>Tlm2RdTrans.begin.m_length</choices>
<choices>Tlm2RdTrans.begin.m_response_status</choices>
<choices>Tlm2RdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.begin.m_streaming_width</choices>
<choices>Tlm2RdTrans.end.m_command</choices>
<choices>Tlm2RdTrans.end.m_address</choices>
<choices>Tlm2RdTrans.end.m_length</choices>
<choices>Tlm2RdTrans.end.m_response_status</choices>
<choices>Tlm2RdTrans.end.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.end.m_streaming_width</choices>
<choices>Tlm2WrTrans.begin.m_command</choices>
<choices>Tlm2WrTrans.begin.m_address</choices>
<choices>Tlm2WrTrans.begin.m_length</choices>
<choices>Tlm2WrTrans.begin.m_response_status</choices>
<choices>Tlm2WrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.begin.m_streaming_width</choices>
<choices>Tlm2WrTrans.end.m_command</choices>
<choices>Tlm2WrTrans.end.m_address</choices>
<choices>Tlm2WrTrans.end.m_length</choices>
<choices>Tlm2WrTrans.end.m_response_status</choices>
<choices>Tlm2WrTrans.end.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.end.m_streaming_width</choices>
<choices>DMI Read Access Request.begin.m_command</choices>
<choices>DMI Read Access Request.begin.m_address</choices>
<choices>DMI Read Access Request.begin.m_length</choices>
<choices>DMI Read Access Request.begin.m_response_status</choices>
<choices>DMI Read Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Read Access Request.begin.m_streaming_width</choices>
<choices>DMI Read Access Request.end.m_dmi_start_address</choices>
<choices>DMI Read Access Request.end.m_dmi_end_address</choices>
<choices>DMI Read Access Request.end.m_dmi_access</choices>
<choices>DMI Write Access Request.begin.m_command</choices>
<choices>DMI Write Access Request.begin.m_address</choices>
<choices>DMI Write Access Request.begin.m_length</choices>
<choices>DMI Write Access Request.begin.m_response_status</choices>
<choices>DMI Write Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Write Access Request.begin.m_streaming_width</choices>
<choices>DMI Write Access Request.end.m_dmi_start_address</choices>
<choices>DMI Write Access Request.end.m_dmi_end_address</choices>
<choices>DMI Write Access Request.end.m_dmi_access</choices>
<choices>DMI Invalidation.begin</choices>
<choices>DMI Invalidation.end</choices>
<choices>Request phase.begin.m_command</choices>
<choices>Request phase.begin.m_address</choices>
<choices>Request phase.begin.m_length</choices>
<choices>Request phase.begin.m_response_status</choices>
<choices>Request phase.begin.m_byte_enable_length</choices>
<choices>Request phase.begin.m_streaming_width</choices>
<choices>Request phase.end._default_field_</choices>
<choices>Response phase.begin._default_field_</choices>
<choices>Response phase.end.m_command</choices>
<choices>Response phase.end.m_address</choices>
<choices>Response phase.end.m_length</choices>
<choices>Response phase.end.m_response_status</choices>
<choices>Response phase.end.m_byte_enable_length</choices>
<choices>Response phase.end.m_streaming_width</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Contention Statistics" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2RdTrans</choices>
<choices>Tlm2WrTrans</choices>
<choices>DMI Read Access Request</choices>
<choices>DMI Write Access Request</choices>
<choices>DMI Invalidation</choices>
<choices>Request phase</choices>
<choices>Response phase</choices>
<choices>Tlm2RdTrans.begin.m_command</choices>
<choices>Tlm2RdTrans.begin.m_address</choices>
<choices>Tlm2RdTrans.begin.m_length</choices>
<choices>Tlm2RdTrans.begin.m_response_status</choices>
<choices>Tlm2RdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.begin.m_streaming_width</choices>
<choices>Tlm2WrTrans.begin.m_command</choices>
<choices>Tlm2WrTrans.begin.m_address</choices>
<choices>Tlm2WrTrans.begin.m_length</choices>
<choices>Tlm2WrTrans.begin.m_response_status</choices>
<choices>Tlm2WrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.begin.m_streaming_width</choices>
<choices>DMI Read Access Request.begin.m_command</choices>
<choices>DMI Read Access Request.begin.m_address</choices>
<choices>DMI Read Access Request.begin.m_length</choices>
<choices>DMI Read Access Request.begin.m_response_status</choices>
<choices>DMI Read Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Read Access Request.begin.m_streaming_width</choices>
<choices>DMI Write Access Request.begin.m_command</choices>
<choices>DMI Write Access Request.begin.m_address</choices>
<choices>DMI Write Access Request.begin.m_length</choices>
<choices>DMI Write Access Request.begin.m_response_status</choices>
<choices>DMI Write Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Write Access Request.begin.m_streaming_width</choices>
<choices>DMI Invalidation.begin</choices>
<choices>Request phase.begin.m_command</choices>
<choices>Request phase.begin.m_address</choices>
<choices>Request phase.begin.m_length</choices>
<choices>Request phase.begin.m_response_status</choices>
<choices>Request phase.begin.m_byte_enable_length</choices>
<choices>Request phase.begin.m_streaming_width</choices>
<choices>Response phase.begin._default_field_</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Count" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2RdTrans</choices>
<choices>Tlm2WrTrans</choices>
<choices>DMI Read Access Request</choices>
<choices>DMI Write Access Request</choices>
<choices>DMI Invalidation</choices>
<choices>Request phase</choices>
<choices>Response phase</choices>
<choices>Tlm2RdTrans.begin.m_command</choices>
<choices>Tlm2RdTrans.begin.m_address</choices>
<choices>Tlm2RdTrans.begin.m_length</choices>
<choices>Tlm2RdTrans.begin.m_response_status</choices>
<choices>Tlm2RdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.begin.m_streaming_width</choices>
<choices>Tlm2WrTrans.begin.m_command</choices>
<choices>Tlm2WrTrans.begin.m_address</choices>
<choices>Tlm2WrTrans.begin.m_length</choices>
<choices>Tlm2WrTrans.begin.m_response_status</choices>
<choices>Tlm2WrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.begin.m_streaming_width</choices>
<choices>DMI Read Access Request.begin.m_command</choices>
<choices>DMI Read Access Request.begin.m_address</choices>
<choices>DMI Read Access Request.begin.m_length</choices>
<choices>DMI Read Access Request.begin.m_response_status</choices>
<choices>DMI Read Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Read Access Request.begin.m_streaming_width</choices>
<choices>DMI Write Access Request.begin.m_command</choices>
<choices>DMI Write Access Request.begin.m_address</choices>
<choices>DMI Write Access Request.begin.m_length</choices>
<choices>DMI Write Access Request.begin.m_response_status</choices>
<choices>DMI Write Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Write Access Request.begin.m_streaming_width</choices>
<choices>DMI Invalidation.begin</choices>
<choices>Request phase.begin.m_command</choices>
<choices>Request phase.begin.m_address</choices>
<choices>Request phase.begin.m_length</choices>
<choices>Request phase.begin.m_response_status</choices>
<choices>Request phase.begin.m_byte_enable_length</choices>
<choices>Request phase.begin.m_streaming_width</choices>
<choices>Response phase.begin._default_field_</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Transaction Latency Statistics" category="General"  configurable="true">
<attrInfo name="Generator" kind="0" type="STRING" value="" description="Specify the field to use as id">
<defaultValue xsi:type="com.synopsys.vp.base:VariantValueType" type="STRING" value=""/>
<choices>Tlm2RdTrans</choices>
<choices>Tlm2WrTrans</choices>
<choices>DMI Read Access Request</choices>
<choices>DMI Write Access Request</choices>
<choices>DMI Invalidation</choices>
<choices>Request phase</choices>
<choices>Response phase</choices>
<choices>Tlm2RdTrans.begin.m_command</choices>
<choices>Tlm2RdTrans.begin.m_address</choices>
<choices>Tlm2RdTrans.begin.m_length</choices>
<choices>Tlm2RdTrans.begin.m_response_status</choices>
<choices>Tlm2RdTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2RdTrans.begin.m_streaming_width</choices>
<choices>Tlm2WrTrans.begin.m_command</choices>
<choices>Tlm2WrTrans.begin.m_address</choices>
<choices>Tlm2WrTrans.begin.m_length</choices>
<choices>Tlm2WrTrans.begin.m_response_status</choices>
<choices>Tlm2WrTrans.begin.m_byte_enable_length</choices>
<choices>Tlm2WrTrans.begin.m_streaming_width</choices>
<choices>DMI Read Access Request.begin.m_command</choices>
<choices>DMI Read Access Request.begin.m_address</choices>
<choices>DMI Read Access Request.begin.m_length</choices>
<choices>DMI Read Access Request.begin.m_response_status</choices>
<choices>DMI Read Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Read Access Request.begin.m_streaming_width</choices>
<choices>DMI Write Access Request.begin.m_command</choices>
<choices>DMI Write Access Request.begin.m_address</choices>
<choices>DMI Write Access Request.begin.m_length</choices>
<choices>DMI Write Access Request.begin.m_response_status</choices>
<choices>DMI Write Access Request.begin.m_byte_enable_length</choices>
<choices>DMI Write Access Request.begin.m_streaming_width</choices>
<choices>DMI Invalidation.begin</choices>
<choices>Request phase.begin.m_command</choices>
<choices>Request phase.begin.m_address</choices>
<choices>Request phase.begin.m_length</choices>
<choices>Request phase.begin.m_response_status</choices>
<choices>Request phase.begin.m_byte_enable_length</choices>
<choices>Request phase.begin.m_streaming_width</choices>
<choices>Response phase.begin._default_field_</choices>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Register Trace" category="General"  configurable="true">
<attrInfo name="Specify ranges" kind="0" type="LIST" value="" description="Specify the begin and end offsets of a list of ranges of the memory to be traced.&#xA;These values are offsets, not addresses, so for example, an offset of 1024 means address 4096 when the memory width is 4.">
<defaultValue xsi:type="com.synopsys.vp.base:VariantListType" type="LIST">
<listItem xsi:type="com.synopsys.vp.base:VariantPairType" type="PAIR">
<first xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="0"/>
<second xsi:type="com.synopsys.vp.base:VariantValueType" type="UINT64" value="1023"/>
</listItem>
</defaultValue>
</attrInfo>
</configInfo>
<configInfo kind="MiscTrace" factoryName="Activity" category="Activity Analysis"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="MCO Task" category="MCO"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="MCO Channel Analysis" category="MCO"  configurable="true"/>
<configInfo kind="MiscTrace" factoryName="QTLAnalysis" category="QTL Analysis"  configurable="true"/>
</com.synopsys.vp.base:SharedConfigInfoData>
